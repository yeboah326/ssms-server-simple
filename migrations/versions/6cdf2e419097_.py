"""empty message

Revision ID: 6cdf2e419097
Revises:
Create Date: 2021-12-30 12:37:51.890343

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "6cdf2e419097"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ssms_school",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("location", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "ssms_user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("username", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=120), nullable=False),
        sa.Column("public_id", sa.String(length=36), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("public_id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "ssms_academic_year",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["school_id"], ["ssms_school.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "ssms_schooluser",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("school_id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(length=10), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["ssms_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["school_id"],
            ["ssms_school.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_superuser",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("role", sa.String(length=10), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["ssms_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_class",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("academic_year_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["academic_year_id"], ["ssms_academic_year.id"], ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_expenditure_type",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("academic_year_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["academic_year_id"], ["ssms_academic_year.id"], ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_expenditure",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("date_created", sa.Date(), nullable=True),
        sa.Column("expenditure_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["expenditure_type_id"], ["ssms_expenditure_type.id"], ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_fees_to_be_paid",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("academic_year_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["academic_year_id"], ["ssms_academic_year.id"], ondelete="cascade"
        ),
        sa.ForeignKeyConstraint(["class_id"], ["ssms_class.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_student",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("date_of_birth", sa.Date(), nullable=True),
        sa.Column("class_id", sa.Integer(), nullable=False),
        sa.Column("fees_paid_in_full", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["class_id"], ["ssms_class.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ssms_fees",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["student_id"], ["ssms_student.id"], ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ssms_fees")
    op.drop_table("ssms_student")
    op.drop_table("ssms_fees_to_be_paid")
    op.drop_table("ssms_expenditure")
    op.drop_table("ssms_expenditure_type")
    op.drop_table("ssms_class")
    op.drop_table("ssms_superuser")
    op.drop_table("ssms_schooluser")
    op.drop_table("ssms_academic_year")
    op.drop_table("ssms_user")
    op.drop_table("ssms_school")
    # ### end Alembic commands ###
